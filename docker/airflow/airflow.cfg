[core]
# The home folder for airflow, default is ~/airflow
airflow_home = /opt/airflow

# The folder where your airflow dags are stored
dags_folder = /opt/airflow/dags

# The folder where airflow plugins are stored
plugins_folder = /opt/airflow/plugins

# The executor class that airflow should use
executor = CeleryExecutor

# The amount of parallelism as a setting to the executor
parallelism = 32

# The number of task instances allowed to run concurrently by the scheduler
dag_concurrency = 16

# The maximum number of active DAG runs per DAG
max_active_runs_per_dag = 16

# Whether to load the examples that ship with Airflow
load_examples = False

# Secret key to save connection passwords in the db
fernet_key = "495797189d47e47937d05c74d691c4daeafbc0e3d53aeeb2b2b0952a0c9e"

# Whether to disable pickling dags
donot_pickle = False

# How long before timing out a python file import while filling the DagBag
dagbag_import_timeout = 30

[database]
# The SqlAlchemy connection string to the metadata database
sql_alchemy_conn = postgresql+psycopg2://airflow:airflow@postgres/airflow

# The encoding for the databases
sql_engine_encoding = utf-8

[webserver]
# The base url of your website as airflow cannot guess what domain or
# cname you are using
base_url = http://localhost:8080

# The ip specified when starting the web server
web_server_host = 0.0.0.0

# The port on which to run the web server
web_server_port = 8080

# Secret key used to run your flask app
secret_key = temporary_key

# Number of workers to run the Gunicorn web server
workers = 4

# Expose the configuration file in the web server
expose_config = True

[celery]
# The app name that will be used by celery
celery_app_name = airflow.executors.celery_executor

# The concurrency that will be used when starting workers
worker_concurrency = 16

# The Celery broker URL
broker_url = redis://:@redis:6379/0

# The Celery result backend
result_backend = db+postgresql://airflow:airflow@postgres/airflow

[scheduler]
# Task instances listen for external kill signal
job_heartbeat_sec = 5

# The scheduler constantly tries to trigger new tasks
scheduler_heartbeat_sec = 5

# How often should stats be printed to the logs
print_stats_interval = 30

# If the last scheduler heartbeat happened more than scheduler_health_check_threshold ago, scheduler is considered unhealthy
scheduler_health_check_threshold = 30

[logging]
# The folder where airflow logs are stored
base_log_folder = /opt/airflow/logs

# Airflow can store logs remotely in AWS S3 or Google Cloud Storage
remote_logging = False

# Logging level
logging_level = INFO

[api]
# How to authenticate users of the API
auth_backend = airflow.api.auth.backend.basic_auth

[operators]
# The default owner assigned to each new operator, unless provided explicitly or passed via `default_args`
default_owner = airflow

[email]
# Configuration email backend and whether to send email on retry
email_backend = airflow.utils.email.send_email_smtp 